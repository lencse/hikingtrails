name: Build, test and deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  default:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - uses: actions/cache@v2
      id: node_modules-cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

    - name: Build
      run: make
      env:
        ANALYTICS_ENABLED: ${{ secrets.ANALYTICS_ENABLED }}
        FATHOM_SITE_ID: ${{ secrets.FATHOM_SITE_ID }}
        MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN }}
        SERVER_PREFIX: ${{ secrets.SERVER_PREFIX }}

    - name: Verify
      run: make verify

    - name: Deploy
      run: ./deploy.sh
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    - name: Send coverage report
      run: make coveralls
      env:
        COVERALLS_SERVICE_NAME: github-actions
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        COVERALLS_GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Github Actions
        SLACK_FOOTER:
            
